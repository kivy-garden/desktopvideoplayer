<DesktopVideoPlayer>:
    _video: video
    play_btn: play_btn
    remaining_label: remaining_label
    bottom_layout: bottom_layout
    _volume_slider: volume_slider
    _volume_btn: volume_btn
    context_menu: context_menu

    on_parent: not self._initialized and root._init()

    Video:
        id: video
        pos: root.pos
        opacity: 0
        on_duration: root.loaded()
        allow_stretch: True
        on_position: root.update_progress(video.position)
        on_state: root.video_state_changed()
        on_touch_down: root._on_touch_down(*args)
#        on_touch_down: root._on_touch_down(args[1])
#        on_key_down: root.on_key_down(args[1])

    AnchorLayout:
        id: bottom_layout
        anchor_y: 'bottom'
        pos: root.pos
        size_hint: 1, None
        height: 70
        StackLayout:
            spacing: 10, 0
            padding: 10, 10, 10, 10
#            background_color: [1, 0, 1, 0.5]
            canvas.before:
                Color:
                    rgba: 0, 0, 0, 0.5
                Rectangle:
                    pos: self.pos
                    size: self.size
            Button:
                id: play_btn
                size_hint: None, None
                size: 50, 50
                background_normal: root.current_play_btn_image
                background_down: root.current_play_btn_image
                on_state: self.opacity = (0.6 if self.state == 'down' else 1.0)
                on_release: root.toggle_video()
            VideoPlayerProgressBar:
                pos_hint: None, None
                id: progress_bar
                video: video
                size_hint: None, None
                width: root.width - play_btn.width - volume_btn.width - remaining_label.width - 50
                height: 50
            Button:
                id: remaining_label
                on_release: root.toggle_remaining_time(args[0])
                text: "test"
                size_hint: None, None
                size: self.texture_size[0], 50
                background_color: [1, 1, 1, 0]
                text: "00:00"
            Button:
                id: volume_btn
                background_normal: root.current_volume_btn_image
                background_down: root.current_volume_btn_image
                size_hint: None, None
                size: 50, 50
                on_release: root.toggle_muted()
                on_state: self.opacity = (0.6 if self.state == 'down' else 1.0)
                Slider:
                    id: volume_slider
                    pos_hint: None, None
                    pos: self.parent.pos[0], 0
                    size_hint: 1, None
                    size: 50, 100
                    orientation: 'vertical'
                    range: 0, 100
                    value: 100
                    opacity: 0
                    on_value: root.volume = self.value_normalized

    ContextMenu:
        id: context_menu
        ContextMenuTextItem:
            text: "Jump to"
#            on_release: root._context_item_release(args[0])
            ContextMenu:
                JumpToMenu:
                    on_jump_button_released: root.jump_to(args[1], args[2], args[3])
        ContextMenuTextItem:
            text: "Show info"
        ContextMenuTextItem:
            text: "Take screenshot"
            ContextMenu:
                ContextMenuTextItem:
                    text: "Save to desktop"
                    on_release: root.save_screenshot_to_desktop()
                ContextMenuTextItem:
                    text: "Save to my home dir"
                    on_release: root.save_screenshot_to_home_dir()
                ContextMenuTextItem:
                    text: "Save to the same dir as the video"
                    on_release: root.save_screenshot_to_the_same_dir()

#                ContextMenuTextItem:
#                    text: "SubMenu #2"
#                ContextMenuTextItem:
#                    text: "SubMenu #3"
#                    ContextMenu:
#                        ContextMenuTextItem:
#                            text: "SubMenu #5"
#                        ContextMenuTextItem:
#                            text: "SubMenu #6"
#                            ContextMenu:
#                                ContextMenuTextItem:
#                                    text: "SubMenu #8"
#                                ContextMenuTextItem:
#                                    text: "SubMenu #9"
#                                ContextMenuTextItem:
#                                    text: "SubMenu #10"
#                        ContextMenuTextItem:
#                            text: "SubMenu #7"
#                ContextMenuTextItem:
#                    text: "SubMenu #4"

<JumpToMenuTextInput@TextInput>:
    size_hint: None, None
    width: 29
    height: 21
    font_size: 12
    padding: 7, 3
    multiline: False

<JumpToMenu>:
#    FloatLayout:
#    pos: self.parent.pos
#        pos: 100, 100
#    on_pos: print(self.pos, self.size)
#    on_size: print(' x'+ str(self.size))

    hours_input: _hours_input
    minutes_input: _minutes_input
    seconds_input: _seconds_input
    size: 145, 52
    StackLayout:
        canvas.before:
            Color:
                rgb: (0.15, 0.15, 0.15)
            Rectangle:
                pos: 0,0
                size: self.size

        padding: 4
        spacing: 3

        JumpToMenuTextInput:
    #        on_touch_down: print(args[1])
            id: _hours_input
        Label:
            text: ":"
            halign: "center"
            size_hint: None, None
            size: self.texture_size
        JumpToMenuTextInput:
            id: _minutes_input
        Label:
            text: ":"
            halign: "center"
            size_hint: None, None
            size: self.texture_size
        JumpToMenuTextInput:
            id: _seconds_input
        ContextMenuButton:
            id: _jump_btn
            text: "GO"
            font_size: 12
            width: 27
            height: 20
            on_release: root._dispatch_jump_event(_hours_input.text, _minutes_input.text, _seconds_input.text)

        Label:
#            canvas.before:
#                Color:
#                    rgb: (1, 0.25, 0.25)
#                Rectangle:
#                    pos: self.pos
#                    size: self.size
            text: "use format HH:MM:SS"
            font_size: 12
            size_hint: 1, None
            height: 18
            text_size: self.size
            color: 0.8, 0.8, 0.8, 1.0
            valign: 'middle'
            line_height: 1

